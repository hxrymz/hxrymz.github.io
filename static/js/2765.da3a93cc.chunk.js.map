{"version":3,"file":"static/js/2765.da3a93cc.chunk.js","mappings":"gKAUMA,GAAYC,EAAAA,EAAAA,aAAW,WAA4DC,GAAS,IAAlEC,EAAe,EAAfA,gBAAiBC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAEhF,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAChC,GAAsBF,EAAAA,EAAAA,UAAS,IAAG,eAA3BG,EAAG,KAAEC,EAAM,KACZC,GAASC,EAAAA,EAAAA,QAAO,KAEtBC,EAAAA,EAAAA,YAAU,WACJN,GACJC,GAAc,EAEb,KAEAK,EAAAA,EAAAA,YAAU,WACRV,GAAQA,IAAOM,IACTC,EAAOP,GACPQ,EAAOG,QAAQC,MAAQZ,EAE/B,GAAE,CAACA,KAuBNa,EAAAA,EAAAA,qBAAoBjB,GAAK,iBAAO,CAC/BkB,QAAO,WATPP,EAAO,IACPQ,SAASC,eAAe,UAAUJ,MAAQ,GAC1CJ,EAAOG,QAAQC,MAAQ,GACG,oBAAfb,GACVA,EAAW,GAOZ,EACAC,KAAI,SAACiB,GACJV,EAAOU,EACR,EACA,IAGE,OACI,2BACJnB,GACQ,cAAGoB,UAAU,QAAO,SACfpB,IAEb,MACQ,kBACIqB,MAAOlB,EAAO,CAACA,MAAOA,GAAQ,KAC1CL,IAAKY,EACLU,UAAU,gBACVhB,KAAMA,GAAQ,OAEd,gBAAc,QACd,kBAAgB,MAChB,gBAAc,MACd,eAAa,MACb,cAAY,QACZkB,YAAavB,EACbwB,SAjDiB,SAACJ,GACpBV,EAAOU,EAAEK,OAAOV,OACU,oBAAfb,GACVA,EAAWkB,EAAEK,OAAOV,MAEtB,EA6CGW,UA3Ce,SAACN,GAEnB,MA6CD,IAGA,W","sources":["components/TextInput.jsx"],"sourcesContent":["import React, {\n\tforwardRef,\n\tuseEffect,\n\tuseImperativeHandle,\n\tuseRef,\n\tuseState,\n} from \"react\";\n\nimport \"./TextInput.css\";\n\nconst TextInput = forwardRef(({ placeholderCode, label, updChanges, init, width, type }, ref) => {\n\t\n\tconst [initialize, setInitialize] = useState(false);\n\tconst [txt, settxt] = useState(\"\");\n\tconst cmpRef = useRef(\"\");\n\n\tuseEffect(() => {\n\t\tif (!initialize) {\n\t\t\tsetInitialize(true);\n\t\t}\n    });\n    \n    useEffect(() => {\n\t\tif (init && init!==txt) {\n            settxt(init);\n            cmpRef.current.value = init;\n\t\t}\n    },[init]);\n    \n\n\tconst handleInput = (v) => {\n\t\tsettxt(v.target.value);\n\t\tif (typeof updChanges === \"function\") {\n\t\t\tupdChanges(v.target.value);\n\t\t}\n\t};\n\n\tconst handleKey = (v) => {\n\t\t\n\t};\n\n\tconst clearTx = (v) => {\n\t\tsettxt(\"\");\n\t\tdocument.getElementById(\"SREsRA\").value = \"\";\n\t\tcmpRef.current.value = \"\";\n\t\tif (typeof updChanges === \"function\") {\n\t\t\tupdChanges(\"\");\n\t\t}\n\t};\n\n\tuseImperativeHandle(ref, () => ({\n\t\tclearTx() {\n\t\t\tclearTx();\n\t\t},\n\t\tinit(v) {\n\t\t\tsettxt(v);\n\t\t},\n\t}));\n\n\tlet isOpen = false;\n    return (\n        <div>\n\t\t\t{label ?\n            <p className=\"label\">\n                {label}\n            </p>\n\t\t\t:null}\n            <input\n                style={width? {width: width}: null}\n\t\t\t\tref={cmpRef}\n\t\t\t\tclassName=\"r7gAOb yyJm8b\"\n\t\t\t\ttype={type || \"text\"}\n\t\t\t\t//aria-autocomplete=\"both\"\n\t\t\t\taria-haspopup=\"false\"\n\t\t\t\tauto-capitalize=\"off\"\n\t\t\t\tauto-complete=\"off\"\n\t\t\t\tauto-correct=\"off\"\n\t\t\t\tspell-check=\"false\"\n\t\t\t\tplaceholder={placeholderCode}\n\t\t\t\tonChange={handleInput}\n\t\t\t\tonKeyDown={handleKey}\n\t\t\t/>\n        </div>\n    )\n})\n\n\nexport default TextInput;"],"names":["TextInput","forwardRef","ref","placeholderCode","label","updChanges","init","width","type","useState","initialize","setInitialize","txt","settxt","cmpRef","useRef","useEffect","current","value","useImperativeHandle","clearTx","document","getElementById","v","className","style","placeholder","onChange","target","onKeyDown"],"sourceRoot":""}