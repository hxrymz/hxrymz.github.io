{"version":3,"file":"static/js/3753.e3f8ad76.chunk.js","mappings":"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","sources":["features/CuentasContables/component/SelectAccounts.jsx","features/CuentasContables/services/print_services.js"],"sourcesContent":["\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { getStore, gen16CodeId, ObjectKeys, callDispatchEvent, fetchPostH, getUrlServerSide, updStore, filterArrAccounts } from \"../../../stores/Utils\";\n\nimport {DropInput_Cmpt } from \"../../../components\";\nimport \"./styles.css\"\nimport { getall_subaccount } from \"../services/server_fetching\";\n\n\nconst DropInput = DropInput_Cmpt();\n\n\n\n\n\nconst SelectAccounts  = ({ handleClick }) => {\n\n\t\n\tconst [initialize, setInitialize] = useState(false);\n\tconst [obs, set_obs] = useState(0);\n\tconst [loading, set_loading] = useState(false);\n\tconst [list, setList] = useState([]);\n\n\tconst searchRef = useRef();\n\n\tuseEffect(() => {\n\t\tif (!initialize) {\n\t\t\tsetInitialize(true);\n\t\t\tgetall_subaccount(refresh)\n\t\t\t\n\t\t}\n    });\n\n\tconst refresh =  (v) => {\n\t\tset_obs(gen16CodeId())\n\t}\n    \n\n\tconst handleChange =  (v) => {\n\t\t!loading && set_loading(true)\n\t}\n\n\tconst handle_search =  (v) => {\n\t\tsetList(filterArrAccounts(getStore(\"account_list\"),v))\n\t\tloading && set_loading(false)\n\t}\n\n\tconst handle_empty =  (v) => {\n\t\tsetList([]);\n\t\tloading && set_loading(false)\n\t}\n\t\n\t\n    \n    const selectItem =  (acc) => {\n\t\thandleClick(acc);\n\t\tsearchRef.current.clearTx();\n\t}\n\n\t\n\n    return (\n\t\t<div>\n\t\t\t<DropInput\n\t\t\t\tplaceholder={\"associar una cuenta\"} \n\t\t\t\twidth={420}\n\t\t\t\tfetchData={handle_search}\n\t\t\t\tloading={loading}\n\t\t\t\tchange={handleChange}\n\t\t\t\tcallempty={handle_empty}\n\t\t\t\tref={searchRef}\n\t\t\t>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t{list && ObjectKeys(list)?.map(cid=>{\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<AccountItem \n\t\t\t\t\t\t\t\tdata={list[cid]}\n\t\t\t\t\t\t\t\telmId={cid} \n\t\t\t\t\t\t\t\tkey={cid}\n\t\t\t\t\t\t\t\tselectItem={selectItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</DropInput>\n\t\t</div>\n    )   \n}\n\nexport default SelectAccounts;\n\n\n\n\nconst AccountItem  = ({ data,  selectItem }) => {\n\t\n\t\n\t\n\n\treturn (\n\t\t<div className=\"item_acc\">\n\t\t\t<div className=\"_dsplFlx account_item_box account_header\">\n\t\t\t\t<div className=\"_dsplFlx\"  onClick={()=>selectItem(data?.accountId, null)}>\n\t\t\t\t\t<div className=\"code\" >\n\t\t\t\t\t\t{data?.code} \n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"name\">\n\t\t\t\t\t\t{data?. name}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t)\n}\n\n\n","\r\nimport { PDFDocument, StandardFonts, rgb, degrees } from 'pdf-lib'\r\nimport { getStore, updStore, ObjectKeys, parseDateMMDDYY } from '../../../stores/Utils';\r\nimport fontkit from '@pdf-lib/fontkit';\r\n\r\n\r\nfunction blobfromArray(pdfBytes) {\r\n  let blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n  let urlCreator = window.URL || window.webkitURL;\r\n  return urlCreator.createObjectURL(blob);\r\n}\r\n\r\n\r\nlet heightPg = 0;\r\n\r\nlet heiItm = 13;\r\n\r\n\r\n\r\nlet timesRomanFont = null;\r\nlet TimesRomanBold = null;\r\nlet GSansBold = null;\r\n\r\n\r\nfunction ResultSheetPdf(param, general, cuentas  ) {\r\n\r\n  \r\n  let totalGP = 0;\r\n  \r\n  let listArr = [];\r\n\r\n  let nobj122 = {\r\n    yInc:0,\r\n    label:{\r\n      value: \"Balance de Resultado\",\r\n      x: 110,\r\n      size: 14,\r\n      font: \"TimesRomanBold\"\r\n    }\r\n  };\r\n  listArr.push(nobj122)\r\n\r\n  \r\n  let nobj12 = {\r\n    yInc:0,\r\n    label:{\r\n      value: \"Fecha: \" + parseDateMMDDYY(Date.now()),\r\n      x: 490,\r\n      size: 12,\r\n      font: \"timesRomanFont\"\r\n    }\r\n  };\r\n  listArr.push(nobj12)\r\n\r\n  \r\n\r\n  param && ObjectKeys(param).map((types, Ind)=>{\r\n    let total = 0;\r\n    let nobj = {\r\n      yInc:20,\r\n      label:{\r\n        value: types,\r\n        x: 30,\r\n        y:  20,\r\n        size: 13,\r\n        font: \"TimesRomanBold\"\r\n      }\r\n    };\r\n    listArr.push(nobj)\r\n\r\n    if(Array.isArray(param[types])){\r\n      param[types].map((it,in2)=>{\r\n        let itm = it;\r\n        total = itemprep(itm,general, cuentas, total, 0, listArr )\r\n      })\r\n    } \r\n    else{\r\n      ObjectKeys(param[types]).map((it,in2)=>{\r\n        let nob2j = {\r\n          yInc:16,\r\n          label:{\r\n            value: it,\r\n            x: 40,\r\n            size: 11,\r\n            font: \"TimesRomanBold\"\r\n          }\r\n        };\r\n        listArr.push(nob2j)\r\n        ObjectKeys(param[types][it]).map((acc,in2)=>{\r\n          let itm = param[types][it][acc];\r\n          total = itemprep(itm,general, cuentas, total, 0, listArr )\r\n        })\r\n      })\r\n    }\r\n\r\n    const textWidth = TimesRomanBold.widthOfTextAtSize(total?.toFixed(2) + \"\", 11);\r\n\r\n    totalGP += types===\"Ingresos\" ? total : total *-1;\r\n   \r\n    \r\n    let nobj33 = {\r\n      yInc:16,\r\n      line:{\r\n        x: 520,\r\n        y: 10,\r\n        width: 70,\r\n        height: 0.5,\r\n        borderColor: rgb(0, 0, 0),\r\n      },\r\n      label:{\r\n        value: \"Total \" + types,\r\n        x: 30,\r\n        size: 11,\r\n        font: \"TimesRomanBold\"\r\n      },\r\n      amount:{\r\n        value:total?.toFixed(2),\r\n        x: 580 - textWidth,\r\n        size: 11,\r\n        font: \"TimesRomanBold\",\r\n      }\r\n    };\r\n    listArr.push(nobj33)\r\n\r\n  })\r\n\r\n\r\n  const textWidth = TimesRomanBold.widthOfTextAtSize(totalGP?.toFixed(2) + \"\", 11);\r\n  \r\n  let nobj44 = {\r\n    yInc:16,\r\n    line:{\r\n      x: 520,\r\n      y: 10,\r\n      width: 70,\r\n      height: 0.5,\r\n      borderColor: rgb(0, 0, 0),\r\n    },\r\n    label:{\r\n      value: \"Ganancia o perdida  (Ingresos - gastos)\",\r\n      x: 30,\r\n      size: 11,\r\n      font: \"TimesRomanBold\"\r\n    },\r\n    amount:{\r\n      value:totalGP?.toFixed(2),\r\n      x: 580 - textWidth,\r\n      size: 11,\r\n      font: \"TimesRomanBold\",\r\n    }\r\n  };\r\n  listArr.push(nobj44)\r\n  \r\n  return {totalGP, listArr };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction GenerateGSheetPdf(param, general, cuentas, gpTotal  ) {\r\n  \r\n  let sumTotal = 0;\r\n  let listArr = [];\r\n\r\n  let nobj122 = {\r\n    yInc:0,\r\n    label:{\r\n      value: \"Balance de Situacion\",\r\n      x: 110,\r\n      size: 14,\r\n      font: \"TimesRomanBold\"\r\n    }\r\n  };\r\n  listArr.push(nobj122)\r\n\r\n  let nobj12 = {\r\n    yInc:0,\r\n    label:{\r\n      value: \"Fecha: \" + parseDateMMDDYY(Date.now()),\r\n      x: 490,\r\n      size: 12,\r\n      font: \"timesRomanFont\"\r\n    }\r\n  };\r\n  listArr.push(nobj12)\r\n\r\n  param && ObjectKeys(param).map((types, Ind)=>{\r\n    let total = 0;\r\n\r\n\r\n    let nobj = {\r\n      yInc:20,\r\n      label:{\r\n        value: types,\r\n        x: 30,\r\n        y:  20,\r\n        size: 13,\r\n        font: \"TimesRomanBold\"\r\n      }\r\n    };\r\n    listArr.push(nobj)\r\n\r\n    if(Array.isArray(param[types])){\r\n\r\n      param[types].map((it,in2)=>{\r\n        let itm = it;\r\n        total = itemprep(itm,general, cuentas, total,  gpTotal, listArr)\r\n      })\r\n    } \r\n    else{\r\n      ObjectKeys(param[types]).map((it,in2)=>{\r\n        \r\n        let nobj22 = {\r\n          yInc:16,\r\n          label:{\r\n            value: it,\r\n            x: 40,\r\n            size: 11,\r\n            font: \"TimesRomanBold\"\r\n          }\r\n        };\r\n        listArr.push(nobj22)\r\n\r\n        ObjectKeys(param[types][it]).map((acc,in2)=>{\r\n          let itm = param[types][it][acc]\r\n          \r\n          total = itemprep(itm,general, cuentas, total, gpTotal, listArr )\r\n        })\r\n      })\r\n    }\r\n\r\n    sumTotal +=  types!==\"Activos\" ? total : 0 ;\r\n    const textWidth = TimesRomanBold.widthOfTextAtSize(total?.toFixed(2) + \"\", 11);\r\n\r\n    let nobj33 = {\r\n      yInc:16,\r\n      line:{\r\n        x: 520,\r\n        y: 10,\r\n        width: 70,\r\n        height: 0.5,\r\n        borderColor: rgb(0, 0, 0),\r\n      },\r\n      label:{\r\n        value: \"Total \" + types,\r\n        x: 30,\r\n        size: 11,\r\n        font: \"TimesRomanBold\"\r\n      },\r\n      amount:{\r\n        value:total?.toFixed(2),\r\n        x: 580 - textWidth,\r\n        size: 11,\r\n        font: \"TimesRomanBold\",\r\n      }\r\n    };\r\n    listArr.push(nobj33)\r\n\r\n  })\r\n  \r\n  const textWidth = TimesRomanBold.widthOfTextAtSize(sumTotal?.toFixed(2) + \"\", 11);\r\n\r\n  let nobj44 = {\r\n    yInc:16,\r\n    line:{\r\n      x: 520,\r\n      y: 10,\r\n      width: 70,\r\n      height: 0.5,\r\n      borderColor: rgb(0, 0, 0),\r\n    },\r\n    label:{\r\n      value: \"Total ( Pasivos + Patrimonio )\",\r\n      x: 30,\r\n      size: 11,\r\n      font: \"TimesRomanBold\"\r\n    },\r\n    amount:{\r\n      value:sumTotal?.toFixed(2),\r\n      x: 580 - textWidth,\r\n      size: 11,\r\n      font: \"TimesRomanBold\",\r\n    }\r\n  };\r\n  listArr.push(nobj44)\r\n  return listArr;\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst itemprep = (itm,data, cuentas, total, rsT, listArr) =>{\r\n\r\n  let fontSize = 10;\r\n  let accountD = data[itm.key];\r\n  let gg = ObjectKeys(accountD)[0];\r\n  let amoAc = accountD?.[gg]?.saldo;\r\n  \r\n  let accc = getStore(\"account_ids\")?.[gg];\r\n\r\n  \r\n \r\n  if(itm.key === \"Resultado (ganancia o perdida)\" && rsT && rsT!==0){\r\n    let amoGP = rsT;\r\n    total += amoGP;\r\n\r\n    const textWidth = timesRomanFont.widthOfTextAtSize(amoGP?.toFixed(2) + \"\", fontSize);\r\n    \r\n    let objD = { \r\n      yInc:heiItm,\r\n      label:{\r\n        value:itm.key,\r\n        x: 50,\r\n        size: fontSize,\r\n        font: \"timesRomanFont\",\r\n      },\r\n      amount:{\r\n        value:amoGP?.toFixed(2),\r\n        x: 580 - textWidth,\r\n        size: fontSize,\r\n        font: \"timesRomanFont\",\r\n      }\r\n    }\r\n    listArr.push(objD);\r\n  }\r\n  else if(amoAc && amoAc!==0){\r\n   \r\n    if(ObjectKeys(accountD).length>0){\r\n     \r\n      let subA = accountD[cuentas[itm.key]]?.sub;\r\n      \r\n      amoAc = accc?.type===\"credit\"? amoAc*-1:amoAc;\r\n      if(subA && ObjectKeys(subA).length>0){\r\n        let objD = { \r\n          yInc:heiItm,\r\n          label:{\r\n            value:  accc[\"code\"] +\" - \"+ itm.key,\r\n            x: 50,\r\n            size: fontSize,\r\n            font: \"timesRomanFont\",\r\n          }\r\n        }\r\n        listArr.push(objD);\r\n        ObjectKeys(subA).map(rr=>{\r\n          let sub_acc = rr; \r\n          let subAcc = data && getStore(\"sub_account_ids\")?.[sub_acc];\r\n          let amo = subA[rr].saldo;\r\n          amo = accc?.type===\"credit\"? amo*-1:amo;\r\n          if(amo!==0){\r\n            const textWidth22 = timesRomanFont.widthOfTextAtSize(amo?.toFixed(2) + \"\", fontSize);\r\n            let objDS = { \r\n              yInc:heiItm,\r\n              label:{\r\n                value: subAcc?.subAccountName,\r\n                x: 70,\r\n                size: fontSize,\r\n                font: \"timesRomanFont\",\r\n              },\r\n              amount:{\r\n                value:  amo?.toFixed(2),\r\n                x: 520 - textWidth22,\r\n                size: fontSize,\r\n                font: \"timesRomanFont\",\r\n              }\r\n            }\r\n            listArr.push(objDS);\r\n          }\r\n        })\r\n        total += amoAc;\r\n        const textWidth = timesRomanFont.widthOfTextAtSize(amoAc?.toFixed(2) + \"\", fontSize);\r\n        let objDT = { \r\n          yInc:heiItm,\r\n          label:{\r\n            value: \"Total \" + itm.key,\r\n            x: 60,\r\n            size: fontSize,\r\n            font: \"TimesRomanBold\",\r\n          },\r\n          amount:{\r\n            value:  amoAc?.toFixed(2),\r\n            x: 580 - textWidth,\r\n            size: fontSize,\r\n            font: \"TimesRomanBold\",\r\n          }\r\n        }\r\n        listArr.push(objDT);\r\n  }\r\n  else{\r\n   \r\n    let amo = accountD[cuentas[itm.key]].saldo;\r\n    \r\n    amo = accc?.type===\"credit\"? amo*-1:amo;\r\n\r\n    \r\n    \r\n    if(amo!==0){\r\n\r\n      if(itm.key === \"Depreciacion Activos fijos\"){\r\n        amo = amo*-1;\r\n      }\r\n      total += amo;\r\n      let ammmo = amo;\r\n      if(itm.key === \"Patrimonio - Saldo al Inicio\"){\r\n        // ammmo = ammmo <0?ammmo*-1:ammmo;\r\n      }\r\n     \r\n      let textWidth = timesRomanFont.widthOfTextAtSize(ammmo?.toFixed(2) + \"\", fontSize);\r\n   \r\n      let objDK = { \r\n        yInc:heiItm,\r\n        label:{\r\n          value:  accc[\"code\"] +\" - \"+  itm.key,\r\n          x: 50,\r\n          size: fontSize,\r\n          font: \"timesRomanFont\",\r\n        },\r\n        amount:{\r\n          value:  ammmo?.toFixed(2),\r\n          x: 580 - textWidth,\r\n          size: fontSize,\r\n          font: \"timesRomanFont\",\r\n        }\r\n      }\r\n      listArr.push(objDK);\r\n    }\r\n  }\r\n}\r\n}\r\n  return  total;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function  RenderArrayPositionPdf(pdfDoc, data ) {\r\n\r\n  let page = pdfDoc.addPage()\r\n  const {  height } = page.getSize()\r\n\r\n  heightPg =  height - 30;\r\n\r\n  \r\n  let beta = 60;\r\n  let fact = Math.ceil(data.length / beta);\r\n  Array.from(Array(fact).keys()).map(ft=>{\r\n   \r\n    if(ft>0){\r\n      page = pdfDoc.addPage();\r\n      heightPg =  height - 30;\r\n    }\r\n\r\n    let arr = data.slice(ft*beta, (ft+1)*beta);\r\n    arr && arr.map((item, Ind)=>{\r\n      \r\n      heightPg =  heightPg - item.yInc;\r\n      if(item.line){\r\n        page.drawRectangle({\r\n          x: item.line.x,\r\n          y: heightPg + (item.line.y),\r\n          width: item.line.width,\r\n          height: item.line.height,\r\n          borderColor: rgb(0, 0, 0),\r\n        });\r\n      }\r\n      if(item.label){\r\n        page.drawText(item.label.value, {\r\n          x: item.label.x,\r\n          y:  heightPg,\r\n          size: item.label.size,\r\n          font: item.label.font === \"TimesRomanBold\"? TimesRomanBold: timesRomanFont ,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n      }\r\n      if(item.amount){\r\n        page.drawText(item.amount.value, {\r\n          x: item.amount.x,\r\n          y:  heightPg,\r\n          size: item.amount.size,\r\n          font: item.amount.font === \"TimesRomanBold\"? TimesRomanBold: timesRomanFont ,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n      }\r\n\r\n    })\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport async function createPdf(data, param_general, cuentas_general, param_result, cuentas_result ) {\r\n  const pdfDoc = await PDFDocument.create();\r\n  pdfDoc.registerFontkit(fontkit);\r\n\r\n\r\n  timesRomanFont = await pdfDoc.embedFont(StandardFonts.TimesRoman);\r\n  TimesRomanBold = await pdfDoc.embedFont(StandardFonts.TimesRomanBold);\r\n\r\n\r\n  GSansBold = await pdfDoc.embedFont(StandardFonts.TimesRomanBold);\r\n\r\n  if(getStore(\"modernFontReport\")){\r\n    let fontUrl = \"https://qvamarkets.com/gql_api/getStatic?fileName=Roboto-Bold.ttf\"\r\n    const fontBytes =  await fetch(fontUrl).then((res) => res.arrayBuffer());\r\n    TimesRomanBold = await pdfDoc.embedFont(fontBytes);\r\n\r\n\r\n\r\n    let fontUrlRoboto_italic = \"https://qvamarkets.com/gql_api/getStatic?fileName=ggSans-Italic.ttf\"\r\n    const fontBytes2 =  await fetch(fontUrlRoboto_italic).then((res) => res.arrayBuffer());\r\n    timesRomanFont = await pdfDoc.embedFont(fontBytes2);\r\n\r\n\r\n    let fontUrlGSB = \"https://qvamarkets.com/gql_api/getStatic?fileName=ggSans-Medium.ttf\"\r\n    const fontBytes_GSB =  await fetch(fontUrlGSB).then((res) => res.arrayBuffer());\r\n    GSansBold = await pdfDoc.embedFont(fontBytes_GSB);\r\n\r\n    \r\n  }\r\n\r\n\r\n \r\n  let {totalGP, listArr } = ResultSheetPdf(param_result, data?.result , cuentas_result );\r\n  \r\n  let bg_data = GenerateGSheetPdf(param_general, data?.general, cuentas_general, totalGP );\r\n\r\n  RenderArrayPositionPdf(pdfDoc, listArr )\r\n  RenderArrayPositionPdf(pdfDoc, bg_data )\r\n\r\n\r\n\r\n  const pdfBytes = await pdfDoc.save();\r\n  let blobUrl = blobfromArray(pdfBytes)\r\n \r\n\r\n  window.open(blobUrl)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const generarComprobacionBalancePdf =  (arr) => {\r\n  let listArr = [];\r\n  const fontSize = 10\r\n  let sumD = 0;\r\n  let sumC = 0;\r\n  arr && arr.map((item, Ind)=>{\r\n    let amo = item.saldo < 0 ? item.saldo*1 : item.saldo*1;\r\n    if(amo){\r\n      let objD = { }\r\n      if(item.sub_cuenta){\r\n        const textWidth = timesRomanFont.widthOfTextAtSize(amo?.toFixed(2) + \"\", fontSize);\r\n\r\n        objD = { \r\n          yInc:13,\r\n          code:{\r\n            value:item.sub_cuenta,\r\n            x: 45,\r\n            size: fontSize,\r\n            font: \"timesRomanFont\",\r\n          },\r\n          name:{\r\n            value: \"- \"+item.nombre_sub_cuenta,\r\n            x: 70,\r\n            size: fontSize,\r\n            font: \"timesRomanFont\",\r\n          },\r\n          amount:{\r\n            value:amo?.toFixed(2),\r\n            x: 460 - textWidth,\r\n            size: fontSize,\r\n            font: \"timesRomanFont\",\r\n          }\r\n        }\r\n\r\n      }else{\r\n\r\n        const textWidth = TimesRomanBold.widthOfTextAtSize(amo?.toFixed(2) + \"\", fontSize);\r\n        item.type === \"debit\" ?  sumD +=amo :  sumC +=amo ;\r\n        objD = { \r\n          yInc:13,\r\n          code:{\r\n            value:item.cuenta,\r\n            x: 30,\r\n            size: fontSize,\r\n            font: \"TimesRomanBold\",\r\n          },\r\n          name:{\r\n            value:item.nombre,\r\n            x: 65,\r\n            size: fontSize,\r\n            font: \"TimesRomanBold\",\r\n          },\r\n\r\n          amount:{\r\n            value:amo?.toFixed(2),\r\n            x: (item.type === \"debit\" ?  520 : 580) - textWidth,\r\n            size: fontSize,\r\n            font: \"TimesRomanBold\",\r\n          }\r\n        }\r\n      }\r\n\r\n      listArr.push(objD)\r\n    }\r\n  })\r\n  const textWidthsumD = TimesRomanBold.widthOfTextAtSize(sumD?.toFixed(2) + \"\", fontSize);\r\n  const textWidthsumC = TimesRomanBold.widthOfTextAtSize(sumC?.toFixed(2) + \"\", fontSize);\r\n\r\n  let wwL = 583 - (517 - textWidthsumD) ;\r\n  let objD = { \r\n    yInc:21,\r\n    line:{\r\n      x: 517 - textWidthsumD,\r\n      y: 10,\r\n      width: wwL,\r\n      height: 0.5,\r\n      borderColor: rgb(0, 0, 0),\r\n    },\r\n    name:{\r\n      value:sumD?.toFixed(2),\r\n      x: 520 - textWidthsumD,\r\n      size: fontSize,\r\n      font: \"TimesRomanBold\",\r\n    },\r\n\r\n    \r\n    amount:{\r\n      value:sumC?.toFixed(2),\r\n      x:  580 - textWidthsumC,\r\n      size: fontSize,\r\n      font: \"TimesRomanBold\",\r\n    }\r\n  }\r\n  listArr.push(objD)\r\n  return listArr;\r\n}\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const ComprobacionBalancePdf = async (data) => {\r\n    \r\n\r\n\r\n  const pdfDoc = await PDFDocument.create()\r\n\r\n  pdfDoc.registerFontkit(fontkit);\r\n\r\n\r\n  timesRomanFont = await pdfDoc.embedFont(StandardFonts.TimesRoman);\r\n  TimesRomanBold = await pdfDoc.embedFont(StandardFonts.TimesRomanBold);\r\n\r\n\r\n  GSansBold = await pdfDoc.embedFont(StandardFonts.TimesRomanBold);\r\n\r\n  if(getStore(\"modernFontReport\")){\r\n    let fontUrl = \"https://qvamarkets.com/gql_api/getStatic?fileName=Roboto-Bold.ttf\"\r\n    const fontBytes =  await fetch(fontUrl).then((res) => res.arrayBuffer());\r\n    TimesRomanBold = await pdfDoc.embedFont(fontBytes);\r\n\r\n\r\n\r\n    let fontUrlRoboto_italic = \"https://qvamarkets.com/gql_api/getStatic?fileName=ggSans-Italic.ttf\"\r\n    const fontBytes2 =  await fetch(fontUrlRoboto_italic).then((res) => res.arrayBuffer());\r\n    timesRomanFont = await pdfDoc.embedFont(fontBytes2);\r\n\r\n\r\n    let fontUrlGSB = \"https://qvamarkets.com/gql_api/getStatic?fileName=ggSans-Medium.ttf\"\r\n    const fontBytes_GSB =  await fetch(fontUrlGSB).then((res) => res.arrayBuffer());\r\n    GSansBold = await pdfDoc.embedFont(fontBytes_GSB);\r\n\r\n    \r\n  }\r\n\r\n\r\n  let page = pdfDoc.addPage()\r\n  const { width, height } = page.getSize()\r\n  \r\n\r\n  heightPg =  height - 40;\r\n  let beta = 55; \r\n  \r\n  page.drawText( \"Balance de Comprobacion\", {\r\n    x: 110,\r\n    y:  heightPg,\r\n    size: 16,\r\n    font: TimesRomanBold,\r\n    color: rgb(0, 0, 0),\r\n  })\r\n\r\n  page.drawText( \"Fecha: \" + parseDateMMDDYY(Date.now()), {\r\n    x: 500,\r\n    y:  heightPg,\r\n    size: 11,\r\n    font: timesRomanFont,\r\n    color: rgb(0, 0, 0),\r\n  })\r\n\r\n  heightPg = heightPg -15;\r\n\r\n  let cherryData =  generarComprobacionBalancePdf(data);\r\n  \r\n  let fact = Math.ceil(cherryData.length / beta);\r\n  Array.from(Array(fact).keys()).map(ft=>{\r\n   \r\n    if(ft>0){\r\n      page = pdfDoc.addPage();\r\n      heightPg =  height - 40;\r\n    }\r\n\r\n    let arr = cherryData.slice(ft*beta, (ft+1)*beta);\r\n\r\n    arr && arr.map((item, Ind)=>{\r\n\r\n      heightPg =  heightPg - item.yInc;\r\n      if(item.line){\r\n        page.drawRectangle({\r\n          x: item.line.x,\r\n          y: heightPg + (item.line.y),\r\n          width: item.line.width,\r\n          height: item.line.height,\r\n          borderColor: rgb(0, 0, 0),\r\n        });\r\n      }\r\n      if(item.code){\r\n        page.drawText(item.code.value, {\r\n          x: item.code.x,\r\n          y:  heightPg,\r\n          size: item.code.size,\r\n          font: item.code.font === \"TimesRomanBold\"? TimesRomanBold: timesRomanFont ,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n      }\r\n      if(item.name){\r\n        page.drawText(item.name.value, {\r\n          x: item.name.x,\r\n          y:  heightPg,\r\n          size: item.name.size,\r\n          font: item.name.font === \"TimesRomanBold\"? TimesRomanBold: timesRomanFont ,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n      }\r\n      if(item.amount){\r\n        page.drawText(item.amount.value, {\r\n          x: item.amount.x,\r\n          y:  heightPg,\r\n          size: item.amount.size,\r\n          font: item.amount.font === \"TimesRomanBold\"? TimesRomanBold: timesRomanFont ,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n      }\r\n\r\n    })\r\n\r\n  })\r\n\r\n \r\n  \r\n  \r\n  const pdfBytes = await pdfDoc.save();\r\n  let blobUrl = blobfromArray(pdfBytes)\r\n \r\n\r\n  window.open(blobUrl)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n *     const getString33Width = (string, fontSize) =>\r\n    string\r\n      .split('')\r\n      .map((c) =>  c.charCodeAt(0))\r\n      .map((c) => c * (fontSize/1000))\r\n      .reduce((total, width) => total + width, 0);\r\n\r\n * \r\n\r\n\r\n\r\n\r\nelse if(ObjectKeys(accountD).length>1){\r\n    ObjectKeys(accountD).map(rr=>{\r\n      let sub_acc = rr.split(\"_\")[1]; \r\n      if(sub_acc){\r\n        heightPg = heightPg -  heiItm;\r\n        let subAcc = data && getStore(\"sub_account_ids\")?.[sub_acc];\r\n        let amo = accountD[rr];\r\n        amo = amo<0? amo*-1:amo;\r\n        page.drawText(subAcc?.subAccountName + \"\", {\r\n          x: 70,\r\n          y:  heightPg,\r\n          size: fontSize,\r\n          font: timesRomanFont,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n\r\n        page.drawText(amo?.toFixed(2) + \"\", {\r\n          x: 460,\r\n          y:  heightPg,\r\n          size: fontSize,\r\n          font: timesRomanFont,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n      }\r\n    })\r\n      heightPg = heightPg -  heiItm;\r\n      let gg = ObjectKeys(accountD)[0];\r\n      let amo = accountD[gg];\r\n      amo = amo<0? amo*-1:amo;\r\n      total += amo;\r\n      page.drawText(\"Total \" + itm.key, {\r\n        x: 50,\r\n        y:  heightPg,\r\n        size: fontSize,\r\n        font: TimesRomanBold,\r\n        color: rgb(0, 0, 0),\r\n      })\r\n\r\n      page.drawText(amo?.toFixed(2) + \"\", {\r\n        x: 520,\r\n        y:  heightPg,\r\n        size: fontSize,\r\n        font: TimesRomanBold,\r\n        color: rgb(0, 0, 0),\r\n      })\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n\r\n \r\n\r\nconst item = (page,itm,data, cuentas, total, font, rsT) =>{\r\n\r\n  let fontSize = 10;\r\n  let accountD = data[itm.key];\r\n  let gg = ObjectKeys(accountD)[0];\r\n  let amoAc = accountD?.[gg]?.saldo;\r\n  amoAc = amoAc<0? amoAc*-1:amoAc;\r\n  if(itm.key === \"Resultado (ganancia o perdida)\" && rsT && rsT!==0){\r\n    heightPg = heightPg -  heiItm;\r\n    let amoGP = rsT;\r\n    total += amoGP;\r\n    page.drawText(itm.key, {\r\n      x: 50,\r\n      y:  heightPg,\r\n      size: fontSize,\r\n      font: timesRomanFont,\r\n      color: rgb(0, 0, 0),\r\n    })\r\n    const textWidth = font.widthOfTextAtSize(amoGP?.toFixed(2) + \"\", fontSize);\r\n      page.drawText(amoGP?.toFixed(2) + \"\", {\r\n      x: 580 - textWidth,\r\n      y:  heightPg,\r\n      size: fontSize,\r\n      font: timesRomanFont,\r\n      color: rgb(0, 0, 0),\r\n    })\r\n  }\r\n  else if(amoAc && amoAc>0){\r\n  if(ObjectKeys(accountD).length>0){\r\n     \r\n      let subA = accountD[cuentas[itm.key]]?.sub;\r\n\r\n      if(subA && ObjectKeys(subA).length>0){\r\n        heightPg = heightPg -  heiItm;\r\n        page.drawText(itm.key + \"\", {\r\n          x: 50,\r\n          y:  heightPg,\r\n          size: fontSize,\r\n          font: timesRomanFont,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n        ObjectKeys(subA).map(rr=>{\r\n          let sub_acc = rr; \r\n          let subAcc = data && getStore(\"sub_account_ids\")?.[sub_acc];\r\n          let amo = subA[rr].saldo;\r\n          amo = amo<0? amo*-1:amo;\r\n          if(amo>0){\r\n            heightPg = heightPg -  heiItm;\r\n            page.drawText(subAcc?.subAccountName + \"\", {\r\n              x: 70,\r\n              y:  heightPg,\r\n              size: fontSize,\r\n              font: timesRomanFont,\r\n              color: rgb(0, 0, 0),\r\n            })\r\n            const textWidth22 = font.widthOfTextAtSize(amo?.toFixed(2) + \"\", fontSize);\r\n\r\n            page.drawText(amo?.toFixed(2) + \"\", {\r\n              x: 520 - textWidth22,\r\n              y:  heightPg,\r\n              size: fontSize,\r\n              font: timesRomanFont,\r\n              color: rgb(0, 0, 0),\r\n            })\r\n          }\r\n        })\r\n        heightPg = heightPg -  heiItm;\r\n        page.drawText(\"Total \" + itm.key, {\r\n          x: 50,\r\n          y:  heightPg,\r\n          size: fontSize,\r\n          font: TimesRomanBold,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n        total += amoAc;\r\n        const textWidth = font.widthOfTextAtSize(amoAc?.toFixed(2) + \"\", fontSize);\r\n        page.drawText(amoAc?.toFixed(2) + \"\", {\r\n          x: 580 - textWidth,\r\n          y:  heightPg,\r\n          size: fontSize,\r\n          font: timesRomanFont,\r\n          color: rgb(0, 0, 0),\r\n        })\r\n      \r\n  }\r\n  else{\r\n    let amo = accountD[cuentas[itm.key]].saldo;\r\n    \r\n    amo = amo<0? amo*-1:amo;\r\n    \r\n    if(amo>0){\r\n      total += amo;\r\n      heightPg = heightPg -  heiItm;\r\n      page.drawText(itm.key + \"\", {\r\n        x: 50,\r\n        y:  heightPg,\r\n        size: fontSize,\r\n        font: timesRomanFont,\r\n        color: rgb(0, 0, 0),\r\n      })\r\n      let textWidth = font.widthOfTextAtSize(amo?.toFixed(2) + \"\", fontSize);\r\n      page.drawText(amo?.toFixed(2) + \"\", {\r\n        //x: 520,\r\n        x: 580 - textWidth,\r\n        y:  heightPg,\r\n        size: fontSize,\r\n        font: timesRomanFont,\r\n        color: rgb(0, 0, 0),\r\n      })\r\n    }\r\n  }\r\n}\r\n}\r\n\r\n  return  total;\r\n}\r\n\r\n\r\n\r\n*/"],"names":["DropInput","DropInput_Cmpt","handleClick","useState","initialize","setInitialize","set_obs","loading","set_loading","list","setList","searchRef","useRef","useEffect","getall_subaccount","refresh","v","gen16CodeId","selectItem","acc","current","clearTx","placeholder","width","fetchData","filterArrAccounts","getStore","change","callempty","ref","className","ObjectKeys","map","cid","AccountItem","data","elmId","onClick","accountId","code","name","blobfromArray","pdfBytes","blob","Blob","type","window","URL","webkitURL","createObjectURL","heightPg","timesRomanFont","TimesRomanBold","ResultSheetPdf","param","general","cuentas","totalGP","listArr","push","yInc","label","value","x","size","font","nobj12","parseDateMMDDYY","Date","now","types","Ind","total","nobj","y","Array","isArray","it","in2","itemprep","nob2j","itm","textWidth","widthOfTextAtSize","toFixed","nobj33","line","height","borderColor","rgb","amount","nobj44","GenerateGSheetPdf","gpTotal","sumTotal","nobj22","rsT","fontSize","accountD","key","gg","amoAc","saldo","accc","amoGP","objD","length","subA","sub","rr","sub_acc","subAcc","amo","textWidth22","objDS","subAccountName","objDT","ammmo","objDK","RenderArrayPositionPdf","pdfDoc","page","addPage","getSize","fact","Math","ceil","from","keys","ft","arr","slice","item","drawRectangle","drawText","color","createPdf","param_general","cuentas_general","param_result","cuentas_result","PDFDocument","registerFontkit","fontkit","embedFont","StandardFonts","fetch","then","res","arrayBuffer","fontBytes","fontBytes2","fontBytes_GSB","result","bg_data","save","blobUrl","open","generarComprobacionBalancePdf","sumD","sumC","sub_cuenta","nombre_sub_cuenta","cuenta","nombre","textWidthsumD","textWidthsumC","ComprobacionBalancePdf","cherryData"],"sourceRoot":""}