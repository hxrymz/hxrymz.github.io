{"version":3,"file":"static/js/4521.892c6f28.chunk.js","mappings":"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","sources":["features/Inventory/component/SelectProducts.jsx","features/Inventory/services/server_fetching.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { getStore, gen16CodeId, ObjectKeys, getLabelTranslate,\n\t} from \"../../../stores/Utils\";\n\nimport {DropInput_Cmpt } from \"../../../components\";\nimport \"./styles.css\"\nimport { getall_product } from \"../services/server_fetching\";\n\n\nconst DropInput = DropInput_Cmpt();\n\n\nconst collName = \"products_list\"\n\n\n\nconst SelectProducts  = ({ handleClick }) => {\n\n\t\n\tconst [initialize, setInitialize] = useState(false);\n\tconst [obs, set_obs] = useState(0);\n\tconst [loading, set_loading] = useState(false);\n\tconst [list, setList] = useState([]);\n\n\tconst searchRef = useRef();\n\n\tuseEffect(() => {\n\t\tif (!initialize) {\n\t\t\tsetInitialize(true);\n\t\t\tgetall_product(cb_result)\n\t\t\tset_obs(gen16CodeId())\n\t\t}\n    });\n\n\n    const cb_result =  (v) => {\n\t\tset_obs(gen16CodeId())\n\t}\n\n\tconst handleChange =  (v) => {\n\t\t!loading && set_loading(true)\n\t}\n\n\tconst handle_search =  (v) => {\n\t\tsetList(filterArr(getStore(collName),v))\n\t\tloading && set_loading(false)\n\t}\n\n\tconst handle_empty =  (v) => {\n\t\tsetList([]);\n\t\tloading && set_loading(false)\n\t}\n\t\n\t\n    \n    const selectItem =  (acc,subacc) => {\n\t\thandleClick(acc,subacc);\n\t\tsearchRef.current.clearTx();\n\t}\n\n\t\n\n    return (\n\t\t<div>\n\t\t\t<DropInput\n\t\t\t\tplaceholder={getLabelTranslate(12)} \n\t\t\t\twidth={420}\n\t\t\t\tfetchData={handle_search}\n\t\t\t\tloading={loading}\n\t\t\t\tchange={handleChange}\n\t\t\t\tcallempty={handle_empty}\n\t\t\t\tref={searchRef}\n\t\t\t>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t{list && ObjectKeys(list)?.map(cid=>{\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Item \n\t\t\t\t\t\t\t\tdata={list[cid]}\n\t\t\t\t\t\t\t\telmId={cid} \n\t\t\t\t\t\t\t\tkey={cid}\n\t\t\t\t\t\t\t\tselectItem={selectItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</DropInput>\n\t\t</div>\n    )   \n}\n\nexport default SelectProducts;\n\n\n\n\nconst Item  = ({ data,  selectItem }) => {\n\t\n\treturn (\n\t\t<div className=\"item_acc\">\n\t\t\t<div className=\"_dsplFlx item_box account_header\">\n\t\t\t\t<div className=\"_dsplFlx\"  onClick={()=>selectItem(data, null)}>\n\t\t\t\t\t<div className=\"code\" >\n\t\t\t\t\t\t{data?.name} \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t)\n}\n\n\n\nfunction filterArr(arr1,search) {\n\tlet srch = search.toLowerCase();\n    var newArr = [];\n    if (arr1.length > 0) {\n\t\tarr1.map((s) => {\n\t\t\tif (s[\"name\"]?.toLowerCase()?.indexOf(srch)>=0 || s[\"upc_barcode\"]?.toString()?.toLowerCase()?.indexOf(srch)>=0 ) {\n\t\t\t\tnewArr.push(s);\n\t\t\t}\n\t\t})\n\t}\n\treturn newArr;\n}\n\n\n","import { fetchEncryptStream, updStore, getStore, convertArray2Obj, ObjectKeys, callbackOnMemory, convertObj2Array, qryStore, csvJSON, gen16CodeId, fetchQueue } from \"../../../stores/Utils\";\n\n\n\n// import prodCSV from './Yansel_products_inventory - Artículos.json'\n\n\nexport const get_inventory_by_prod = async (pId,cb) => {\n    \n    let bdyq2 = {...getStore(qryStore())?.get_inventory_prod};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \":productId\": pId\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        updStore(\"inv_products_list\", sortProducts(convertObj2Array(td.list),\"name\"));\n        updStore(\"inv_products_stock\", td.stock);\n        cb && cb();\n    }\n};\n\n\nexport const get_prod_stock = async (pId,cb) => {\n    \n    let bdyq2 = {...getStore(qryStore())?.get_prod_stock};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \"productId\": pId\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        let products_stock = {...getStore(\"products_stock\")};\n        products_stock[pId] = td.stock;\n        updStore(\"products_stock\", products_stock);\n        cb && cb();\n    }\n};\n\n\n\n\nexport const getall_product = async (cb) => {\n    let bdyq2 = {...getStore(qryStore())?.all_prods};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        updStore(\"products_list\", sortProducts(td,\"name\"));\n        updStore(\"products_ids\", convertArray2Obj(convertObj2Array(td),\"productId\"));\n        cb && cb();\n    }\n};\n\n\n\n\nexport const search_product = async (cb) => {\n\n    let bdyq2 = {...getStore(qryStore())?.search_prod};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        limit: 120\n    }\n\n   \n\n    if(getStore(\"searchQry\").length>2){\n        getStore(\"searchQry\").split(\" \").map((qry,inDq)=>{\n            if(qry){\n                bdyq2.params[\":search\"+inDq] = qry.trim();\n            }\n        })\n        const res = fetchEncryptStream(bdyq2);\n        const td = await res;\n        if (td) {\n            updStore(\"products_list\", sortProducts(convertObj2Array(td),\"code\"));\n            cb && cb();\n        }\n    }else{\n        updStore(\"products_list\",null);\n        cb && cb();\n    }\n\n};\n\n\n\n\nexport const getall_movement = async (cb) => {\n    let bdyq2 = {...getStore(qryStore())?.all_entry_invoices};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        updStore(\"movements_list\", sortProducts(td,\"date\"));\n        updStore(\"movements_ids\", convertArray2Obj(convertObj2Array(td),\"inventoryId\"));\n        cb && cb();\n    }\n   \n};\n\n\n\n\nexport const search_movement = async (cb) => {\n\n    let bdyq2 = {...getStore(qryStore())?.search_entry_invoice};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \":search\": getStore(\"searchMovQry\")\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        updStore(\"movements_list\", sortProducts(convertObj2Array(td),\"code\"));\n        cb && cb();\n    }\n};\n\n\n\n\n\n\n\nexport const get_filter_by_acc = async (frm,cb) => {\n   \n};\n\n\n\n\nexport function GroupbyAcc(arr, isPay) {\n    let key =  \"product\";\n    var obj = {\n        \"operations\":[]\n    };\n    let balance = 0;\n\n    let arr1 = arr && ObjectKeys(arr)\n    if (arr1.length > 0) {\n      arr1.map((ele) => {\n        let s = arr[ele];\n        if(s[\"type\"]){\n            if(isPay){\n                balance += s[\"type\"] === \"debit\" ? s[\"amount\"] * -1 : s[\"amount\"] * 1;\n            }\n            else{\n                balance += s[\"type\"] === \"credit\" ? s[\"amount\"] * -1 : s[\"amount\"] * 1;\n            }\n            obj[\"operations\"].push(convert4acc(s));\n        }\n      });\n    } else {\n      obj = null;\n    }\n    return obj;\n  }\n\n\n\n  export function convert4acc(s) {\n    let nItm = {};\n    nItm[\"product\"] =  getStore(\"products_ids\")?.[s[\"product\"]];\n    nItm[\"sub_product\"] = getStore(\"sub_products_ids\")?.[s[\"subProduct\"]];\n    nItm[\"comprobanteId\"] = s[\"comprobanteId\"];\n    nItm[\"document\"] = s[\"document\"];\n    nItm[\"date\"] = s[\"date\"];\n    if(s[\"type\"]===\"credit\"){\n        nItm[\"debit\"] = 0;\n        nItm[\"credit\"] = s[\"amount\"];\n        \n    }\n    else if(s[\"type\"]===\"debit\"){\n        nItm[\"credit\"] = 0;\n        nItm[\"debit\"] = s[\"amount\"];\n    }\n    return nItm;\n  }\n\n\n\n  \n//  sorting episodes comparing inputs to save in cache\nexport const sortProducts = (td, key) =>\ncallbackOnMemory(\n\t\"sortProducts\",\n\t[td],\n\t() => {\n        let order = true;\n\t\tlet sortedA = td && td.sort((a, b) => {\n\t\t\tlet A = a[key];\n\t\t\tlet B = b[key];\n\t\t\tif (A < B) {\n\t\t\t\treturn order ? -1 : 1;\n\t\t\t}\n\t\t\tif (A > B) {\n\t\t\t\treturn order ? 1 : -1;\n\t\t\t}\n\t\t\treturn 0;\n        });\n\t\treturn sortedA;\n\t}\n);\n\n\n\n\nexport const calcSf2fromInch = ({w,h}) =>\ncallbackOnMemory(\n\t\"calcSf2fromInch\",\n\t[w,h],\n\t() => {\n        let square_inch = w*h;\n\t\treturn square_inch;\n\t}\n);\n\n\n\n\nexport const sortComprobantesByDate = (td) =>\ncallbackOnMemory(\n\t\"sortComprobantesByDate\",\n\t[td],\n\t() => {\n        let order = true;\n        let key = \"date\";\n\t\tlet sortedA = td && td.sort((a, b) => {\n\t\t\tlet A =(new Date(a[key])).getTime();\n\t\t\tlet B = (new Date(b[key])).getTime();\n\t\t\tif (A < B) {\n\t\t\t\treturn order ? -1 : 1;\n\t\t\t}\n\t\t\tif (A > B) {\n\t\t\t\treturn order ? 1 : -1;\n\t\t\t}\n\t\t\treturn 0;\n        });\n\t\treturn sortedA;\n\t}\n);\n\n\n\n\nexport const calcSubmayor = (td, product, subProduct) =>\ncallbackOnMemory(\n\t\"calcSubmayor\",\n    [td, product, subProduct],() => {\n        let order = true;\n        let key = \"date\";\n\t\tlet sortedA = td.sort((a, b) => {\n\t\t\tlet A =(new Date(a[key])).getTime();\n\t\t\tlet B = (new Date(b[key])).getTime();\n\t\t\tif (A < B) {\n\t\t\t\treturn order ? -1 : 1;\n\t\t\t}\n\t\t\tif (A > B) {\n\t\t\t\treturn order ? 1 : -1;\n\t\t\t}\n\t\t\treturn 0;\n        });\n\n       let prevBal = 0;\n\n        const saldo = (item)=>{\n            let itm = {...item};\n            if(item?.product?.type===\"credit\"){\n                itm[\"saldo\"] = prevBal +  (itm[\"credit\"]*1) - (itm[\"debit\"]*1); \n            }else{\n                itm[\"saldo\"] = prevBal + (itm[\"debit\"]*1) - (itm[\"credit\"]*1); \n            }\n           \n            prevBal = itm[\"saldo\"];\n            return itm;\n        }\n\n\t\treturn sortedA.map((d)=>saldo(d));\n\t}\n);\n\n\n\n\n\nexport const delete_product = async (productId, cb) => {\n    \n    let bdyq2 = {...getStore(qryStore())?.delete_prod};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        productId: productId\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        cb && cb();\n    }\n};\n\n\n\nexport const delete_inventory = async (invId, cb) => {\n    let bdyq2 = {...getStore(qryStore())?.delete_inventory};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \"inventoryId\": invId\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        cb && cb();\n    }\n};\n\n\nexport const delete_movement = async (invId, cb) => {\n    let bdyq2 = {...getStore(qryStore())?.delete_entry_invoice};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \"entriesInvoiceId\": invId\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        cb && cb();\n    }\n};\n\n\n\nexport const entry_invoice_acc_2 = async (invId, cb) => {\n    let bdyq2 = {...getStore(qryStore())?.entry_invoice_acc_2};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \"entriesInvoiceId\": invId\n    }\n    \n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        cb && cb(td);\n    }\n};\n\n\nexport const clearComprobante = async (invId, cb) => {\n    let bdyq2 = {...getStore(qryStore())?.upd_entry_invoice};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \"entriesInvoiceId\": invId\n    };\n    bdyq2.data2update= {comprobanteId:\"\"};\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        cb && cb();\n    }\n};\n\n// \n\n\n\n\n\nexport const fill_inv = async () => {\n    \n   /** \n    let comp2save = []\n    invJs.map(tS=>{\n\n        let frm = {...tS}\n        if(frm.document === \"Apertura-0001\"){\n           \n            frm[\"date\"] = 1672549200000;\n            let bdyq2 = {...getStore(qryStore())?.add_opera};\n            bdyq2.params = {\n                businessId:  getStore(\"profileUser\")?.businessId\n            }\n            bdyq2.form=frm;\n            comp2save.push(bdyq2)\n        }\n       \n        \n    })\n    console.log(comp2save)\n    \n      \n    const promises = comp2save.map(async (qry2Sv) => {\n        const res = fetchEncryptStream(qry2Sv);\n        const td = await res;\n        if (td) {\n            //console.log(td)\n        }\n    })      \n    await Promise.all(promises);\n\n\n\n        itm[\"cloverId\"] = it2[\"ID de Clover\"];\n        itm[\"name\"] = it2[\"Nombre\"];\n        itm[\"altName\"] = it2[\"Nombre alternativo\"];\n        itm[\"price\"] = it2[\"Precio\"]*1;\n        itm[\"priceType\"] = it2[\"Tipo de precio\"] === \"Fijo\"? \"static\":\"dynamic\";\n        itm[\"priceUnit\"] = it2[\"Unidad de precio\"];\n        itm[\"productCode\"] = it2[\"Código del producto\"];\n        itm[\"sku\"] = it2[\"SKU\"];\n        itm[\"group\"] = it2[\"Grupos de modificadores\"];\n        itm[\"labels\"] = it2[\"Etiquetas\"];\n        itm[\"hidde\"] = it2[\"Oculto\"] === \"NO\"?false:true;\n   */\n\n};\n\nlet idsProds = {};\n\nexport const loadCSVInve = () => {\n    /*\n    let hh = prodCSV;\n    let prod = []\n    false && hh.map(it2=>{\n        let itm = {...it2};\n        let pId = gen16CodeId();\n        let fixname =  itm.name;\n        fixname =  fixname.split(';').join(\"\");\n        fixname =  fixname.split('\"').join(\"\");\n        fixname =  fixname.split('.').join(\"\");\n        itm.name = fixname;\n        if(idsProds[pId]){\n            pId = gen16CodeId();\n            itm[\"productId\"]  = pId;\n            idsProds[pId] = 1;\n        }else{\n            itm[\"productId\"] = pId;\n            idsProds[pId] = 1;\n        }\n        console.log(itm);\n\t\t\n\t\tlet bdyq2 = {\n\t\t\tquery: \"addProductsHRG\",\n\t\t\tparams: {\n\t\t\t\tbusinessId:  getStore(\"profileUser\")?.businessId\n\t\t\t},\n\t\t\tform:itm\n        };\n        prod.push(bdyq2);\n    });\n\n     */\n  //  fetchQueue(prod, fetchCSVInve)\n   \n}\n\nconst fetchCSVInve = async (qry2Sv) => {\n    const res = fetchEncryptStream(qry2Sv);\n    const td = await res;\n    if (td) {\n        return td;\n    }\n}\n\n\n// \n\nexport const rangeProdArr = (obj, range) =>\ncallbackOnMemory(\n\t\"rangeProdArr\",\n\t[obj,range],\n\t() => {\n        return obj ? ObjectKeys(obj).slice(0,range) : [];\n    }\n);","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["DropInput","DropInput_Cmpt","handleClick","useState","initialize","setInitialize","set_obs","loading","set_loading","list","setList","searchRef","useRef","useEffect","getall_product","cb_result","gen16CodeId","v","selectItem","acc","subacc","current","clearTx","placeholder","getLabelTranslate","width","fetchData","arr1","search","srch","toLowerCase","newArr","length","map","s","indexOf","toString","push","filterArr","getStore","change","callempty","ref","className","ObjectKeys","cid","Item","data","elmId","onClick","name","get_inventory_by_prod","pId","cb","bdyq2","qryStore","get_inventory_prod","params","businessId","res","fetchEncryptStream","td","updStore","sortProducts","convertObj2Array","stock","get_prod_stock","products_stock","all_prods","convertArray2Obj","search_product","search_prod","limit","split","qry","inDq","trim","getall_movement","all_entry_invoices","search_movement","search_entry_invoice","key","callbackOnMemory","sort","a","b","A","B","delete_product","productId","delete_prod","delete_inventory","invId","delete_movement","delete_entry_invoice","entry_invoice_acc_2","rangeProdArr","obj","range","slice","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}