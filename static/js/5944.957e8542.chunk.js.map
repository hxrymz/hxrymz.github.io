{"version":3,"file":"static/js/5944.957e8542.chunk.js","mappings":"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","sources":["features/ComprobanteParametrizados/component/SelectProviders.jsx","features/ProvidersCustomers/services/server_fetching.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { getStore, gen16CodeId, ObjectKeys,\n\t} from \"../../../stores/Utils\";\n\nimport {DropInput_Cmpt } from \"../../../components\";\nimport \"./styles.css\"\nimport { getall_provider } from \"../../ProvidersCustomers/services/server_fetching\";\n\n\nconst DropInput = DropInput_Cmpt();\n\n\nconst collName = \"providers_list\"\n\n\n\nconst SelectDropAccount  = ({ handleClick }) => {\n\n\t\n\tconst [initialize, setInitialize] = useState(false);\n\tconst [obs, set_obs] = useState(0);\n\tconst [loading, set_loading] = useState(false);\n\tconst [list, setList] = useState([]);\n\n\tconst searchRef = useRef();\n\n\tuseEffect(() => {\n\t\tif (!initialize) {\n\t\t\tsetInitialize(true);\n\t\t\tgetall_provider(cb_result)\n\t\t\tset_obs(gen16CodeId())\n\t\t}\n    });\n\n\n    const cb_result =  (v) => {\n\t\tset_obs(gen16CodeId())\n\t}\n\n\tconst handleChange =  (v) => {\n\t\t!loading && set_loading(true)\n\t}\n\n\tconst handle_search =  (v) => {\n\t\tsetList(filterArr(getStore(collName),v))\n\t\tloading && set_loading(false)\n\t}\n\n\tconst handle_empty =  (v) => {\n\t\tsetList([]);\n\t\tloading && set_loading(false)\n\t}\n\t\n\t\n    \n    const selectItem =  (acc,subacc) => {\n\t\thandleClick(acc,subacc);\n\t\tsearchRef.current.clearTx();\n\t}\n\n\t\n\n    return (\n\t\t<div>\n\t\t\t<DropInput\n\t\t\t\tplaceholder={\"buscar provedor\"} \n\t\t\t\twidth={420}\n\t\t\t\tfetchData={handle_search}\n\t\t\t\tloading={loading}\n\t\t\t\tchange={handleChange}\n\t\t\t\tcallempty={handle_empty}\n\t\t\t\tref={searchRef}\n\t\t\t>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t{list && ObjectKeys(list)?.map(cid=>{\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Item \n\t\t\t\t\t\t\t\tdata={list[cid]}\n\t\t\t\t\t\t\t\telmId={cid} \n\t\t\t\t\t\t\t\tkey={cid}\n\t\t\t\t\t\t\t\tselectItem={selectItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</DropInput>\n\t\t</div>\n    )   \n}\n\nexport default SelectDropAccount;\n\n\n\n\nconst Item  = ({ data,  selectItem }) => {\n\t\n\treturn (\n\t\t<div className=\"item_acc\">\n\t\t\t<div className=\"_dsplFlx item_box account_header\">\n\t\t\t\t<div className=\"_dsplFlx\"  onClick={()=>selectItem(data, null)}>\n\t\t\t\t\t<div className=\"code\" >\n\t\t\t\t\t\t{data?.name} \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t)\n}\n\n\n\n\n\n\nexport function filterArr(arr1,search) {\n\tlet srch = search.toLowerCase();\n    var newArr = [];\n    if (arr1.length > 0) {\n\t\tarr1.map((s) => {\n\t\t\tif (s[\"type\"]===\"provider\" &&  s[\"name\"]?.toLowerCase()?.indexOf(srch)>=0 ) {\n\t\t\t\tnewArr.push(s);\n\t\t\t}\n\t\t})\n\t}\n\treturn newArr;\n}","import { fetchEncryptStream, updStore, getStore, gen16CodeId, convertArray2ObjGroupby, convertArray2Obj, ObjectKeys, callbackOnMemory, convertObj2Array, qryStore } from \"../../../stores/Utils\";\n\nexport const getall_provider = async (cb) => {\n    \n    let bdyq2 = {...getStore(qryStore())?.all_prov_cust};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        updStore(\"providers_list\", sortProviders(convertObj2Array(td),\"code\"));\n        updStore(\"providers_ids\", convertArray2Obj(convertObj2Array(td),\"providerId\"));\n        cb && cb();\n    }\n};\n\n\n\n\nexport const search_provider = async (cb) => {\n    \n    let bdyq2 = {...getStore(qryStore())?.search_prov_cust};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \":search\": getStore(\"search_prov\")\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        updStore(\"providers_list\", sortProviders(convertObj2Array(td),\"code\"));\n        cb && cb();\n    }\n};\n\n\n\n\nexport const get_filter_by_acc = async (frm,cb) => {\n    \n    let bdyq2 = {...getStore(qryStore())?.find_prov_cust};\n    bdyq2.params = {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        \":provider\": frm.provider\n    }\n    if(frm?.subProvider){\n        bdyq2[\"params\"][\":sub_provider\"] = frm?.subProvider;\n        bdyq2[\"queryString\"] += ' AND subProvider contain :sub_provider';\n    }\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td && !td.error) {\n        updStore(\"submayor_list\", td);\n        updStore(\"submayor_group\", GroupbyAcc(td));\n    }\n    cb && cb();\n};\n\n\n\n\nexport function GroupbyAcc(arr, isPay) {\n    let key =  \"provider\";\n    var obj = {\n        \"operations\":[]\n    };\n    let balance = 0;\n\n    let arr1 = arr && ObjectKeys(arr)\n    if (arr1.length > 0) {\n      arr1.map((ele) => {\n        let s = arr[ele];\n        if(s[\"type\"]){\n            if(isPay){\n                balance += s[\"type\"] === \"debit\" ? s[\"amount\"] * -1 : s[\"amount\"] * 1;\n            }\n            else{\n                balance += s[\"type\"] === \"credit\" ? s[\"amount\"] * -1 : s[\"amount\"] * 1;\n            }\n            obj[\"operations\"].push(convert4acc(s));\n        }\n      });\n    } else {\n      obj = null;\n    }\n    return obj;\n  }\n\n\n\n  export function convert4acc(s) {\n    let nItm = {};\n    nItm[\"provider\"] =  getStore(\"providers_ids\")?.[s[\"provider\"]];\n    nItm[\"sub_provider\"] = getStore(\"sub_providers_ids\")?.[s[\"subProvider\"]];\n    nItm[\"comprobanteId\"] = s[\"comprobanteId\"];\n    nItm[\"document\"] = s[\"document\"];\n    nItm[\"date\"] = s[\"date\"];\n    if(s[\"type\"]===\"credit\"){\n        nItm[\"debit\"] = 0;\n        nItm[\"credit\"] = s[\"amount\"];\n        \n    }\n    else if(s[\"type\"]===\"debit\"){\n        nItm[\"credit\"] = 0;\n        nItm[\"debit\"] = s[\"amount\"];\n    }\n    return nItm;\n  }\n\n\n\n  \n//  sorting episodes comparing inputs to save in cache\nexport const sortProviders = (td, key) =>\ncallbackOnMemory(\n\t\"sortProviders\",\n\t[td],\n\t() => {\n        let order = true;\n\t\tlet sortedA = td && td.sort((a, b) => {\n\t\t\tlet A = a[key] * 1;\n\t\t\tlet B = b[key] *1;\n\t\t\tif (A < B) {\n\t\t\t\treturn order ? -1 : 1;\n\t\t\t}\n\t\t\tif (A > B) {\n\t\t\t\treturn order ? 1 : -1;\n\t\t\t}\n\t\t\treturn 0;\n        });\n\t\treturn sortedA;\n\t}\n);\n\n\nexport const sortSubProviders = (td, key) =>\ncallbackOnMemory(\n\t\"sortSubProviders\",\n\t[td],\n\t() => {\n        let order = true;\n\t\tlet sortedA = td && td.sort((a, b) => {\n\t\t\tlet A = a[key] * 1;\n\t\t\tlet B = b[key] *1;\n\t\t\tif (A < B) {\n\t\t\t\treturn order ? -1 : 1;\n\t\t\t}\n\t\t\tif (A > B) {\n\t\t\t\treturn order ? 1 : -1;\n\t\t\t}\n\t\t\treturn 0;\n        });\n\t\treturn sortedA;\n\t}\n);\n\n\n\n\nexport const sortComprobantesByDate = (td) =>\ncallbackOnMemory(\n\t\"sortComprobantesByDate\",\n\t[td],\n\t() => {\n        let order = true;\n        let key = \"date\";\n\t\tlet sortedA = td && td.sort((a, b) => {\n\t\t\tlet A =(new Date(a[key])).getTime();\n\t\t\tlet B = (new Date(b[key])).getTime();\n\t\t\tif (A < B) {\n\t\t\t\treturn order ? -1 : 1;\n\t\t\t}\n\t\t\tif (A > B) {\n\t\t\t\treturn order ? 1 : -1;\n\t\t\t}\n\t\t\treturn 0;\n        });\n\t\treturn sortedA;\n\t}\n);\n\n\n\n\nexport const calcSubmayor = (td, provider, subProvider) =>\ncallbackOnMemory(\n\t\"calcSubmayor\",\n    [td, provider, subProvider],() => {\n        let order = true;\n        let key = \"date\";\n\t\tlet sortedA = td.sort((a, b) => {\n\t\t\tlet A =(new Date(a[key])).getTime();\n\t\t\tlet B = (new Date(b[key])).getTime();\n\t\t\tif (A < B) {\n\t\t\t\treturn order ? -1 : 1;\n\t\t\t}\n\t\t\tif (A > B) {\n\t\t\t\treturn order ? 1 : -1;\n\t\t\t}\n\t\t\treturn 0;\n        });\n\n       let prevBal = 0;\n\n        const saldo = (item)=>{\n            let itm = {...item};\n            if(item?.provider?.type===\"credit\"){\n                itm[\"saldo\"] = prevBal +  (itm[\"credit\"]*1) - (itm[\"debit\"]*1); \n            }else{\n                itm[\"saldo\"] = prevBal + (itm[\"debit\"]*1) - (itm[\"credit\"]*1); \n            }\n           \n            prevBal = itm[\"saldo\"];\n            return itm;\n        }\n\n\t\treturn sortedA.map((d)=>saldo(d));\n\t}\n);\n\n\n\n\n\nexport const delete_provider = async (providerId, cb) => {\n\n    let bdyq2 = {...getStore(qryStore())?.delete_prov_cust};\n    bdyq2.params= {\n        businessId:  getStore(\"profileUser\")?.businessId,\n        providerId: providerId\n    };\n    const res = fetchEncryptStream(bdyq2);\n    const td = await res;\n    if (td) {\n        cb && cb();\n    }\n};\n\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["DropInput","DropInput_Cmpt","handleClick","useState","initialize","setInitialize","set_obs","loading","set_loading","list","setList","searchRef","useRef","useEffect","getall_provider","cb_result","gen16CodeId","v","selectItem","acc","subacc","current","clearTx","placeholder","width","fetchData","filterArr","getStore","change","callempty","ref","className","ObjectKeys","map","cid","Item","data","elmId","onClick","name","arr1","search","srch","toLowerCase","newArr","length","s","indexOf","push","cb","bdyq2","qryStore","all_prov_cust","params","businessId","res","fetchEncryptStream","td","updStore","sortProviders","convertObj2Array","convertArray2Obj","search_provider","search_prov_cust","key","callbackOnMemory","sort","a","b","A","B","sortSubProviders","delete_provider","providerId","delete_prov_cust","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}